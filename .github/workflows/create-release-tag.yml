name: Create Release Tag

on:
  repository_dispatch:
    types: [create-release-tag]

jobs:
  create-release-tag:
    runs-on: ubuntu-latest
    env:
      WORKFLOW_RUN_ID: ${{ github.event.client_payload.workflow_run_id }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Change Log
        run: |
          echo "Your change log content" > change-log.txt

      - name: Upload Change Log
        uses: actions/upload-artifact@v2
        with:
          name: change-log
          path: ./change-log.txt

      - name: Read Test URL
        run: |
          TEST_URL=$(cat ${{ github.workspace }}/test-url.txt)
          echo "Test URL: $TEST_URL"

      - name: Set release variables
        run: |
          RELEASE_NAME="Web Release "$(date "+%m/%d/%Y %H:%M:%S")
          echo "Test URL: $TEST_URL"
          RELEASE_TAG="rel_"$(date "+%y_%m_%d")"_dm"
          WORKFLOW_URL="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${WORKFLOW_RUN_ID}"
          WORKFLOW_TITLE="ðŸš€ Deploy Action: ${WORKFLOW_URL}"
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Create release & tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MY_PROJECT_TOKEN }}
          script: |
            const body = [
              process.env.WORKFLOW_TITLE,
              process.env.RELEASE_NAME,
              'Job initiated at ' + new Date().toLocaleString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit' }).replace(/[,:]/g, (match) => match === ',' ? ' ' : ':'),
            ];

            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_NAME,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
                body: body.join('\r\n'),
              });
            } catch (error) {
              core.setFailed(error.message);
            }
